<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">

  <title>{{ title }} - {{ site.title }}</title>

  <link rel="shortcut icon" href="/favicon.svg" type="image/svg+xml">

  {#
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
  <link rel="manifest" href="/site.webmanifest">
  <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5">
  <meta name="msapplication-TileColor" content="#da532c">
  <meta name="theme-color" content="#ffffff"> #}

  <meta name="description" content="{{ socialDescription or site.description }}">

  {# Twitter metadata #}
  <meta name="twitter:card" content="summary">
  {% if site.author.twitterUsername %}
  <meta name="twitter:site" content="{{ site.author.twitterUsername }}">
  {% endif %}
  <meta name="twitter:title" content="{{ title }}">
  <meta name="twitter:description" content="{{ socialDescription or site.description }}">
  {% if site.author.twitterUsername %}
  <meta name="twitter:creator" content="{{ site.author.twitterUsername }}">
  {% endif %}
  {#
  <meta name="twitter:image" content="http://www.example.com/image.jpg"> #}
  {# End of Twitter metadata #}

  {# Facebook / Open Graph metadata #}
  <meta property="og:title" content="{{ title }}" />
  <meta property="og:type" content="article" />
  <meta property="og:url" content="{{ site.url}}{{ page.url }}" />
  {#
  <meta property="og:image" content="http://example.com/image.jpg" /> #}
  <meta property="og:description" content="{{ socialDescription or site.description }}" />
  <meta property="og:site_name" content="{{ site.title }}" />
  {# End of Facebook / Open Graph metadata #}

  {# Rel links #}
  {# {% if site.author.githubUsername %}
  <link href="https://github.com/{{ site.author.githubUsername }}" rel="me">
  {% endif %} #}

  {# {% if site.author.microblogUsername %}
  <link href="https://micro.blog/{{ site.author.microblogUsername }}" rel="me">
  {% endif %} #}

  {# {% if site.author.mastodonUsername %}
  <link href="https://mastodon.social/{{ site.author.mastodonUsername }}" rel="me">
  {% endif %} #}
  {# End of Rel links #}

  {# {% if site.indieauth == true %}
  <link rel="authorization_endpoint" href="https://indieauth.com/auth">
  <link rel="token_endpoint" href="https://tokens.indieauth.com/token">
  <link rel="microsub" href="https://aperture.p3k.io/microsub/134">
  {% endif %} #}

  {# {% if site.micropub == true %}
  <link rel="micropub" href="{{ site.url }}/micropub">
  {% endif %} #}

  {# {% if site.author.instagramUsername %}
  <link href="https://instagram.com/{{ site.author.instagramUsername }}" rel="me">
  {% endif %} #}

  {#
  <script src="/assets/js/alpine.js" defer></script> #}
  {#
  {% set css %}
  {% include "../../node_modules/modern-css-reset/dist/reset.min.css" %}
  {% include "../../assets/css/main.css" %}
  {% endset %}

  <style>
    {
        {
        css | cssmin | safe
      }
    }
  </style> #}

  <link rel="stylesheet" href="/styles/styles.css">
  <link rel="alternate" type="application/rss+xml" title="RSS feed for Ed Johnson-Williamsâ€™ blog" href="/feed.xml" />

  <script>
    document.addEventListener("DOMContentLoaded", (event) => {
      let theme = localStorage.theme === "dark" || (!("theme" in localStorage) && window.matchMedia("(prefers-color-scheme: dark)").matches) ? "dark" : "light"; const toggleTheme = () => { if (theme === "dark") { switchToLight() } else if (theme === "light") { switchToDark() } }; const switchToDark = () => {
        localStorage.theme = "dark"; theme = "dark"; document.documentElement.classList.add("dark"); themeButton.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"   class="w-6 h-6">
        <title id="switch-to-light-theme-title">Switch to light theme</title>
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" /></svg`}; const switchToLight = () => {
        localStorage.theme = "light"; theme = "light"; document.documentElement.classList.remove("dark"); themeButton.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"
        class="w-6 h-6">
        <title id="switch-to-dark-theme-title">Switch to dark theme</title>
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" /></svg >`}; const themeButton = document.querySelector("button#themeButton"); themeButton.addEventListener("click", toggleTheme); if (theme === "dark") { switchToDark() } else if (theme === "light") { switchToLight() }
    });
  </script>
</head>